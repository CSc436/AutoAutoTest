import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;
import model.FakeStandardIn;
import model.FakeStandardOutput;
import org.junit.Test;

public class CLASSNAME {
    boolean testFailed = false;

    public boolean relaxedAssertEquals(Object expected, Object actual, boolean isIgnoreCasing, boolean isIgnoreWhitespace, boolean isIgnorePunctuation, int floatPrecision) {
        double precision = Math.pow(10, -(floatPrecision));
        if (expected instanceof Double || expected instanceof Float) {
            double expectedValue = (double) expected;
            double actualValue = (double) actual;
            return assertEquals(expectedValue, actualValue, precision);
        } else if(expected instanceof String) {
            RelaxedStringFloatCheck checker = new RelaxedStringFloatCheck(
                isIgnoreCasing, isIgnoreWhitespace, isIgnorePunctuation, precision
            );
           return assertTrue(checker.isAcceptable((String) expected, (String) actual));
        } else {
           return assertEquals(expected, actual);
        }
    }

TESTS

}